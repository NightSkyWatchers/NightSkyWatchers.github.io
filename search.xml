<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[浅析collectionView的item间距]]></title>
    <url>%2F2018%2F03%2F13%2F%E6%B5%85%E6%9E%90collectionView%E7%9A%84item%E9%97%B4%E8%B7%9D%2F</url>
    <content type="text"><![CDATA[ios开发中比较常用到的就是 tableView 和 collectionView，二者分别用于列表展示和 网格展示；由于tableView的易用性几乎每个APP都会用到; 相对tableView，collectionView使用起来比较繁琐，所以collectionView的使用不常见。但UICollectionView也有自身的特点，比如横向布局、多行或者多列(瀑布流)展示。 #####一、创建collectionView（collectionView控制器）12345(collectionView)- (instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout(collectionView控制器)- (instancetype)initWithCollectionViewLayout:(UICollectionViewLayout *)layout ; 初始化类似tableView，设置delegate 和 datasource；不同于tablView初始化设置UITableViewStyle，而collctionView初始化设置UICollectionViewLayout（一般用它的子类UICollectionViewFlowLayout）。此处的UICollectionViewLayout是用于存储collectionView的一些布局属性：12345@property (nonatomic) CGFloat minimumLineSpacing;@property (nonatomic) CGFloat minimumInteritemSpacing;@property (nonatomic) CGSize itemSize;@property (nonatomic) UICollectionViewScrollDirection scrollDirection;@property (nonatomic) UIEdgeInsets sectionInset; cell间距的设置需要用到以上这些关键性属性。 #####二、布局协议 UICollectionViewDelegateFlowLayout 协议中有以下这几个和布局相关的方法123456- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath;- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section;- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section;- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section;- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section; 这几个方法的功能和UICollectionViewLayout的4个属性基本相对应：1.属性用于统一设置2.对象方法既可以统一设置，也可以区别设置 这几个方法名的区别在后半部分sizeForItemAtIndexPath:(NSIndexPath *)indexPath```123等同于属性 itemSize；```xxxxx insetForSectionAtIndex:(NSInteger)section 等同于属性 sectionInset； minimumLineSpacingForSectionAtIndex:(NSInteger)section```123等同于属性 minimumLineSpacing；```xxxxx minimumInteritemSpacingForSectionAtIndex:(NSInteger)section 等同于属性 minimumInteritemSpacing； #####三、图文解析对应属性（针对不同滚动方向）gif中每个不同颜色代表不同的section 水平方向滚动的collectionView，竖直方向的间距是固定的：minimumInteritemSpacing指的是同一个section 内部item的竖直方向间隙；minimumLineSpacing指的是同一个section 内部 item的水平方向间隙； 竖直方向滚动的collectionView，水平方向的间距是固定的：minimumInteritemSpacing指的是同一个section 内部item的水平方向间隙；minimumLineSpacing指的是同一个section 内部 item的竖直方向间隙； ######总结：minimumInteritemSpacing表示 同一个section内部间item的 和滚动方向垂直方向的间距； minimumLineSpacing指的是同一个section 内部 item 的滚动方向的间距；sectionInset指的是每个section内缩进；属性设置的每个section的内错进是相同的，都是正数。如果需要实现不同的setion的不同的内缩进，可以使用对象方法- (UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout insetForSectionAtIndex:(NSInteger)section;来实现。 ######注意：在写demo的过程中，发现collectionView的contentInsetAdjustmentBehavior（等同于控制器的automaticallyAdjustsScrollViewInsets属性）默认为UIScrollViewContentInsetAdjustmentAutomatic枚举值，会自适应控制器的边距，避开导航栏和状态栏，而使得collectionView的真实高度 和设置的高度不一致（相差状态栏和导航栏的高度和）。 demo地址：https://github.com/NightSkyWatchers/collectionView，欢迎下载观摩指正，内有*彩蛋*]]></content>
      <categories>
        <category>技术研发随记</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2F2017%2F08%2F07%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[经过两三天的努力终于搭建了属于自己的博客;今天写下了第一篇博客!记录生活中的喜怒哀乐,开发中的收获与经验,旅游途中的感想... GO! GO! GO! 欢迎光临我的 [个人博客](https://NightSkyWatchers.github.io)!]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo+git一步一坑搭建博客]]></title>
    <url>%2F2017%2F08%2F07%2Fhexo-git%E4%B8%80%E6%AD%A5%E4%B8%80%E5%9D%91%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[根据这篇文章使用hexo+git搭建真正属于自己的博客的过程中是很顺利的,但是还是在部署到远程仓库的时候还是遇到了以下几个问题:1234deploy:type:gitrepository: git@github.com:xxxxxx.githup.io.gitbranch: master 1.修改了配置_config.yml文件之后,执行部署命令 hexo g/ hexo s,报错如下:12FATAL bad indentation of a mapping entry at line 81, column 13:repository: https://github.com/NightSkyWat ... 原因:hexo语法比较严格,在修改配置文件_config.yml之后,一定要检查冒号后面的空格!!!检查冒号后面的空格!!!检查冒号后面的空格!!! 解决:将修改部分type/repository/branch后面都有一个空格 2.修改问题1之后,执行部署命令hexo d,报错如下:1ERROR Deployer not found: git 原因:部署远程博客前，需要安装git解决:执行该命令 npm install hexo-deployer-git --save 3.使用SSH KEY,本地生成id_rsa 和id_rsa_pub文件,并复制id_rsa_pub文件中的内容添加到帐号之后,部署(hexo d)报错:12345Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html 测试当前的SSH是否配置成功,在git bash 中执行命令ssh -T git@github.com报错如下:Permission denied (publickey). 原因:说明当前SSH没有配置成功 解决:请确保以下2步均做到1、远程服务器已经有了对应于本地主机上公钥2、本地主机ssh服务开启(windows上是ssh-agent.exe运行)，并且本地主机私钥要包含在ssh服务列表中 第一步已经完成,:已经将id_rsa_pub文件中的内容添加到了github帐号 检查本地私钥是否存在于ssh服务中12cd ~/.ssheval &apos;ssh-agent -s&apos; 如果运行这句出现Could not open a connection to your authentication agent，那么就先运行ssh-agent bash再运行ssh-add -l如果不存在，需要添加进去ssh-add ~/.ssh/id_rsa添加完成之后,再执行ssh -T git@github.com测试SSH是否配置成功!!! 如果出现以下内容说明配置成功12Hi username! You&apos;ve successfully authenticated,but GitHub does not provide shell access. 4.执行终端命令hexo s,并在浏览器里输入https://localhost:4000后,可以预览到修改的相关内容,但是部署到远程仓库后(成功部署),打开对应的http://username.githup.io网址却出现以下充斥着形形色色广告的界面,到底是什么原因导致的呢?最后经过排查找出错误原因:因为自己错误的拼写习惯,错把github拼成了githup,修改了 userName.github.io 和 _config.yml中repository:键值之后,顺序执行 hexo clean / hexo g /hexo d命令重新部署到远程仓库, 并进入对应的 http://username.github.io ###大功告成!!! 参考github设置添加SSHPermission denied (publickey)Hexo博客搭建中的坑5分钟 搭建免费个人博客]]></content>
      <categories>
        <category>技术扩展</category>
      </categories>
      <tags>
        <tag>jss</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F08%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
